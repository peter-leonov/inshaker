<?xml version="1.0" encoding="UTF-8"?>
<settings> 
  <data_type>xml</data_type>
  <font>Arial</font>
  <text_size>13</text_size>
  <text_color>#000000</text_color>
  <decimals_separator>,</decimals_separator>
  <thousands_separator> </thousands_separator>
  <digits_after_decimal/>
  <reload_data_interval/>
  <add_time_stamp>false</add_time_stamp>
  <precision>2</precision>
  <pie>
    <x/>
    <y/>
    <radius>200</radius>                                       <!-- [] (Number) If left empty, will be 25% of your chart smaller side -->
    <inner_radius>30</inner_radius>                             <!-- [0] (Number) the radius of the hole (if you want to have donut, use > 0) -->
    <height>3</height>                                        <!-- [0] (Number) pie height (for 3D effect) -->
    <angle>30</angle>                                          <!-- [0] (0 - 90) lean angle (for 3D effect) -->
    <outline_color/>                           <!-- [#FFFFFF] (hex color code) -->    
    <outline_alpha/>                           <!-- [0] (Number) -->
    <base_color>#888888</base_color>
    <brightness_step>15</brightness_step>
    <!-- <colors>0xFF0F00,0xFF6600,0xFF9E01,0xFCD202,0xF8FF01,0xB0DE09,0x04D215,0x0D8ECF,0x0D52D1,0x2A0CD0,0x8A0CCF,0xCD0D74</colors> -->
    <link_target/>                               <!-- [] (_blank, _top...) If pie slice has a link this is link target -->
    <alpha/>                                           <!-- [100] (0 - 100) slices alpha. You can set individual alphas for every slice in data file. If you set alpha to 0 the slice will be inactive for mouse events and data labels will be hidden. This allows you to make not full pies and donuts. -->
  </pie>
  
  <animation>
    <start_time>0</start_time>                                <!-- [0] (Number) fly-in time in seconds. Leave 0 to appear instantly -->
    <start_effect>strong</start_effect>                       <!-- [bounce] (bounce, regular, strong) -->
    <start_radius/>                             <!-- [] (Number) if left empty, will use pie.radius * 5 -->
    <start_alpha>0</start_alpha>                              <!-- [0] (Number) -->                
    <pull_out_on_click/>                   <!-- [true] (true / false) whether to pull out slices when user clicks on them (or on legend entry) -->
    <pull_out_time>1.5</pull_out_time>                        <!-- [0] (number) pull-out time (then user clicks on the slice) -->
    <pull_out_effect>Bounce</pull_out_effect>                 <!-- [bounce] (bounce, regular, strong) -->
    <pull_out_radius/>                       <!-- [] (Number) how far pie slices should be pulled-out then user clicks on them (if left empty, uses 20% of pie radius) -->
    <pull_out_only_one/>                   <!-- [false] (true / false) if set to true, when you click on any slice, all other slices will be pushed in -->        
  </animation>
  
  <data_labels>
    <radius>45</radius>                                         <!-- [30] (Number) distance of the labels from the pie. Use negative value to place labels on the pie -->
    <text_color/>                                 <!-- [text_color] (hex color code) -->
    <text_size/>                                   <!-- [text_size] (Number) -->
    <max_width/>                                   <!-- [120] (Number) -->
    <show>
       <![CDATA[{title}]]>                        <!-- [] ({value} {title} {percents}) You can format any data label: {value} - will be replaced with value and so on. You can add your own text or html code too. -->
    </show>
    <show_lines/>                                 <!-- [true] (true / false) whether to show lines from slices to data labels or not -->                                                                                              
    <line_color/>                                 <!-- [#000000] (hex color code) -->
    <line_alpha/>                                 <!-- [15] (Number) -->
    <hide_labels_percent>5</hide_labels_percent>              <!-- [0] data labels of slices less then skip_labels_percent% will be hidden (to avoid label overlapping if there are many small pie slices)-->                                       
  </data_labels>

  <group>
    <percent/>                                       <!-- [0] (Number) if the calculated percent value of a slice is less than specified here, and there are more than one such slices, they can be grouped to "The others" slice-->
    <color/>                                           <!-- [] (hex color code) color of "The others" slice -->                                       
    <title/>                                           <!-- [Others] title of "The others" slice -->
    <url/>                                               <!-- [] url of "The others" slice -->
    <description/>                               <!-- [] description of "The others" slice -->        
    <pull_out/>                                     <!-- [false] (true / false) whether to pull out the other slice or not --> 
  </group>

  <background>                                                <!-- BACKGROUND -->
    <color/>                                           <!-- [#FFFFFF] (hex color code) -->
    <alpha/>                                           <!-- [0] (0 - 100) use 0 if you are using custom swf or jpg for background -->
    <border_color/>                             <!-- [#FFFFFF] (hex color code) -->
    <border_alpha/>                             <!-- [0] (0 - 100) -->
    <file/>                                             <!-- [] (filename) swf or jpg file of a background. Do not use progressive jpg file, it will be not visible with flash player 7 -->
                                                              <!-- The chart will look for this file in path folder (path is set in HTML) -->
  </background>
  
  <balloon>                                                   <!-- BALLOON -->
    <enabled/>                                       <!-- [true] (true / false) -->
    <color/>                                           <!-- [] (hex color code) balloon background color. If empty, slightly darker then current slice color will be used -->
    <alpha>80</alpha>                                         <!-- [80] (0 - 100) -->
    <text_color/>                                 <!-- [0xFFFFFF] (hex color code) -->
    <text_size/>                                   <!-- [text_size] (Number) -->    
    <show>
       <![CDATA[{title}: {value} ({percents}%)]]>              <!-- [] ({value} {title} {percents}) You can format any data label: {value} - will be replaced with value and so on. You can add your own text or html code too. -->
    </show>
  </balloon>
    
  <legend>
    <enabled>false</enabled>
  </legend>
  
  
  <error_messages>
    <enabled>false</enabled>                                       <!-- [true] (true / false) -->
  </error_messages>
</settings>