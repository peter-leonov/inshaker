/*
 * © 2007 http://www.markup.programica.ru/
 * Author - Kornilov Pavel
 */
@import url(ie.css);

html {
filter: expression(runtimeStyle.filter = '',document.execCommand('BackgroundImageCache', false, true));
}

#top .nav img { padding-top: 12px; }
.banners { zoom:1; }

label /* If Programica.js — delete */
{
	behavior		: expression( (this['for'] == null && firstChild && runtimeStyle.behavior == '') ?
									onclick = function () {
										if (this.getElementsByTagName('input')[0])
										{
											try {
											this.getElementsByTagName('input')[0].click() ||
											this.getElementsByTagName('input')[0].focus()
											}
											catch (ex) { /* ничего */ }
										}
										else if (this.getElementsByTagName('textarea')[0])
										{
											this.getElementsByTagName('textarea')[0].focus()			
										}
									} : '', runtimeStyle.behavior = 'none' )
}

/* png fix */
.bg-png-crop
{
	filter	: expression(
		(runtimeStyle.filter == '') ? runtimeStyle.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src='+currentStyle.backgroundImage.split('\"')[1]+', sizingMethod=crop)' : runtimeStyle.filter,
		runtimeStyle.backgroundImage = 'none');
}
.bg-png-scale
{
	filter	: expression(
		(runtimeStyle.backgroundImage != 'none') ? runtimeStyle.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src='+currentStyle.backgroundImage.split('\"')[1]+', sizingMethod=scale)' : runtimeStyle.filter,
		runtimeStyle.backgroundImage = 'none');
}

img.this-src-png
{
	width: expression(width);
	filter: expression( (runtimeStyle.filter == '') ? runtimeStyle.filter="progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"+src+"', sizingMethod='image')" : '',
						src = '/i/0.gif');
}

/*
	Реализуем [type="text(или что угодно)"]. Приходится копировать все стили в css для ie6 или дублировать стилевое описание в основном файле.
	<input type="text" class="red type-text"/>
	<input type="text" class="type-text"/>
*/
input
{
	scrollbar-face-color: expression(runtimeStyle.scrollbarFaceColor = '#fff', className = (className) ? ' type-'+type : 'type-'+type)
}
input.type-password,
input.type-text		{ background: #f3f3f3; height: 24px; border: 0 solid #c9c9c9; border-width: 1px 0 0 1px; padding: 0 0 0 4px; line-height: 24px; }
.index-wrapper #registration input.type-password	{ width: 138px; }
/* Позиционируем по аналогии с бэкграундом
innerHTML expression Object required при innerHTML
*/
.izvrat-plus,
.index-wrapper form * { position: relative; z-index: 10; }
.index-wrapper form
{
	behavior		: expression(
						(runtimeStyle.behavior==''&&currentStyle.backgroundImage!='none') ?
							insertAdjacentHTML('beforeEnd', '<div class="ie"" style="height:10px;width:10px;position:absolute;'
								+';filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='+currentStyle.backgroundImage.split('\"')[1]+',sizingMethod=crop)">'+'<img src="'+currentStyle.backgroundImage.split('\"')[1]+'" style="visibility: hidden" alt="" /></div>') : '',
						runtimeStyle.backgroundImage = 'none',
						runtimeStyle.behavior = 'none'
					);
}
.index-wrapper form .ie { top: 0; left:0; z-index: 1; }

.content-after
{
	behavior: expression( innerHTML += '<div class="ie">ie</div>', runtimeStyle.behavior = 'none' )
}

.b {
	background-image: url(../border/f.gif);
	background-repeat: no-repeat;
	background-position: 100% 0;
	filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src='/t/border/f.gif',sizingMethod=crop);
	zoom	: expression(runtimeStyle.zoom = 1,
				insertAdjacentHTML('beforeEnd', '<div class="hr"></div>')
	);
}
.b .hr		{ display: block; border: 0 solid #fff; border-width: 0 1px; height: 1px; background: transparent; padding: 0; overflow: hidden; }

#mybar h2	{ width: expression( runtimeStyle.width = firstChild.clientWidth); }
#mybar h2 a	{ display: inline-block; }

/* position: fixed */
html { background-attachment: fixed; }
.position-fixed
{
	position		: absolute;
	top				: expression(parseInt(document.documentElement.scrollTop, 10) + "px");
}

.add-hover-class-for-any-elements
{
	behavior		: expression(
						onmouseover = function() {this.className += ' hover'},
						onmouseout = function() {this.className = this.className.replace(/ hover/g, "")},
						runtimeStyle.behavior = 'none'
					);
}

.max-width { width : expression(document.body.clientWidth > 920 ? "92em" : "auto"); }
.height-100-percantage { height: expression(document.body.clientHeight+'px'); }
.border-color-transparent
{
	filter			: chroma(color=cyan);
	border-color	: cyan;
}


/* input[type=...] */
form .where-input
{
	background-color: expression(this.getAttribute("type") && (this.getAttribute("type")=="file" || this.getAttribute("type")=="text") ? "#5f5f5f" : "inherit");
	border			: expression(this.getAttribute("type") && this.getAttribute("type")=="text" ? "3px solid #5f5f5f" : "inherit");
	color			: expression(this.getAttribute("type") && (this.getAttribute("type")=="file" || this.getAttribute("type")=="text") ? "#8f8f8f" : "inherit");
	display			: expression(this.getAttribute("type") && (this.getAttribute("type")=="file" || this.getAttribute("type")=="text") ? "block" : "inherit");
	margin			: expression(this.getAttribute("type") && (this.getAttribute("type")=="file" || this.getAttribute("type")=="text") ? "5px 0 0 0" : "inherit");
	padding			: expression(this.getAttribute("type") && (this.getAttribute("type")=="file" || this.getAttribute("type")=="text") ? "0 2px" : "inherit");
	width			: expression(this.getAttribute("type") && (this.getAttribute("type")=="file" || this.getAttribute("type")=="text") ? "315px" : "inherit");
}

.img-for-em
{
	height		: expression(runtimeStyle.height = (height/10)+'em');
	width		: expression(runtimeStyle.width = (width/10)+'em');
}

.wrapper-vertical-align-middle
{
	margin-top: expression(
						((parentNode.offsetHeight/2)-parseInt(offsetHeight)/2) < 0 ? "0" :
						(parentNode.offsetHeight/2)-(parseInt(offsetHeight)/2) +'px'
					);
}

.first-child
{
	background-color: expression(this.parentNode.currentStyle.color)
	behavior		: expression( (this == parentNode.firstChild) ? className += ' first-child' : '', runtimeStyle.behavior = 'none' )
}

.inherit
{
	background-color: expression( runtimeStyle.backgroundColor = parentNode.currentStyle.backgroundColor);
}

/*this crash ie*/
filter	: expression(
	(runtimeStyle.filter == '') ? runtimeStyle.filter = '' : runtimeStyle.filter,
	parentNode.);